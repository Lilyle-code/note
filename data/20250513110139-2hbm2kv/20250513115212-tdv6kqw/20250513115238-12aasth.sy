{"ID":"20250513115238-12aasth","Spec":"1","Type":"NodeDocument","Properties":{"icon":"1f527","id":"20250513115238-12aasth","title":"工具汇总","type":"doc","updated":"20250513115422"},"Children":[{"ID":"20250513115422-ef4wlh1","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20250513115422-ef4wlh1","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"TensorFlow Profiler"}]},{"ID":"20250513115422-sv6tu35","Type":"NodeList","ListData":{},"Properties":{"id":"20250513115422-sv6tu35","updated":"20250513115436"},"Children":[{"ID":"20250513115422-dgekb1s","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-dgekb1s","updated":"20250513115436"},"Children":[{"ID":"20250513115422-ciebj4z","Type":"NodeParagraph","Properties":{"id":"20250513115422-ciebj4z","updated":"20250513115436"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"特点"}]}]}]},{"ID":"20250513115422-5dfplll","Type":"NodeParagraph","Properties":{"id":"20250513115422-5dfplll","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"集成在 TensorBoard 中：TensorFlow Profiler 是 TensorBoard 的一个内置插件，提供了丰富的图形化界面，能够展示各个阶段（例如数据输入、预处理、计算、内存分配等）的时间分解及性能瓶颈信息。"}]},{"ID":"20250513115422-gajq8tw","Type":"NodeParagraph","Properties":{"id":"20250513115422-gajq8tw","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"多维度性能分析：支持输入管道分析、GPU 内核统计、内存使用情况、函数调用时序（Trace Viewer）等。你可以直观地看到模型训练过程中每一步的耗时以及各个操作的贡献情况。"}]},{"ID":"20250513115422-4u4eaaf","Type":"NodeParagraph","Properties":{"id":"20250513115422-4u4eaaf","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"适用于计算图模式：由于 TensorFlow 自身基于静态计算图，因此 Profiler 能够在执行前预先收集和分析整个图的信息，从而帮助开发者发现数据传输和操作调度等方面的性能问题。"}]},{"ID":"20250513115422-a1p1u9s","Type":"NodeParagraph","Properties":{"id":"20250513115422-a1p1u9s","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"易于配置：可以通过添加回调函数或在代码中以上下文管理器方式启用。例如，通过 tf.keras.callbacks.TensorBoard 回调中的profile_batch 参数进行简单配置即可捕获指定 batch 的性能数据。"}]},{"ID":"20250513115422-0xp6ijb","Type":"NodeList","ListData":{},"Properties":{"id":"20250513115422-0xp6ijb","updated":"20250513115439"},"Children":[{"ID":"20250513115422-4jd29hl","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-4jd29hl","updated":"20250513115439"},"Children":[{"ID":"20250513115422-zw6ivpu","Type":"NodeParagraph","Properties":{"id":"20250513115422-zw6ivpu","updated":"20250513115439"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"示例"}]}]}]},{"ID":"20250513115422-rg7xw3j","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513115422-rg7xw3j","updated":"20250513115610"},"Children":[{"ID":"20250513115610-b0nhdfs","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250513115610-b0nhdfs","updated":"20250513115610"},"Children":[{"ID":"20250513115610-eop68e3","Type":"NodeParagraph","Properties":{"id":"20250513115610-eop68e3","updated":"20250513115610"},"Children":[{"Type":"NodeText","Data":"使用回调函数（在训练时，TensorBoard 的 Profiler 界面中就会展示相应批次的详细性能分析数据。）"}]}]}]},{"ID":"20250513115422-zndr6o3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250513115422-zndr6o3","updated":"20250513115608"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"import tensorflow as tf\n#指定记录 profile 的批次范围\ntb_callback = tf.keras.callbacks.TensorBoard(\n\n   log_dir='/path/to/logdir',\n\n   profile_batch='10,15'  # 记录第10至15个batch\n\n)\nmodel.fit(train_data, epochs=5, callbacks=[tb_callback])\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250513115422-0bl2a45","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513115422-0bl2a45","updated":"20250513115616"},"Children":[{"ID":"20250513115616-7o3c51p","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20250513115616-7o3c51p","updated":"20250513115616"},"Children":[{"ID":"20250513115616-915uykg","Type":"NodeParagraph","Properties":{"id":"20250513115616-915uykg","updated":"20250513115616"},"Children":[{"Type":"NodeText","Data":"使用上下文管理器（适合在自定义训练循环中手动控制开始与停止采集数据）"}]}]}]},{"ID":"20250513115627-wiezkrq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250513115627-wiezkrq","updated":"20250513115630"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"import tensorflow as tf\n\nlog_dir = '/path/to/logdir'\n\ntf.profiler.experimental.start(log_dir)\n\nfor step, (x, y) in enumerate(train_dataset):\n\n    # 执行训练步骤\n\n    loss = train_step(x, y)\n\n    if step == 50:\n\n        break\n\ntf.profiler.experimental.stop()\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250513115422-8hc07ct","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20250513115422-8hc07ct","updated":"20250513115736"},"Children":[{"Type":"NodeText","Data":"PyTorch Profiler"}]},{"ID":"20250513115422-q3a9zdj","Type":"NodeList","ListData":{},"Properties":{"id":"20250513115422-q3a9zdj","updated":"20250513115646"},"Children":[{"ID":"20250513115422-ampawvg","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-ampawvg","updated":"20250513115646"},"Children":[{"ID":"20250513115422-gr6kfib","Type":"NodeParagraph","Properties":{"id":"20250513115422-gr6kfib","updated":"20250513115646"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"特点"}]}]}]},{"ID":"20250513115422-13zaq9f","Type":"NodeParagraph","Properties":{"id":"20250513115422-13zaq9f","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"直接集成在 PyTorch 内部：PyTorch 提供了 torch.profiler 模块，通过上下文管理器或调度器来捕获模型运行期间的事件和耗时，从而方便地进行性能分析。"}]},{"ID":"20250513115422-p8legrm","Type":"NodeParagraph","Properties":{"id":"20250513115422-p8legrm","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"支持动态计算图：因为 PyTorch 采用动态图（eager execution），所以在实际运行时可以灵活捕捉每次迭代中的详细信息，这对于调试和性能调优十分有帮助。"}]},{"ID":"20250513115422-q9oycjw","Type":"NodeParagraph","Properties":{"id":"20250513115422-q9oycjw","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"多种采样方式和可视化支持：支持对 CPU 和 GPU 活动进行采样，可以设置时间调度策略（例如等待、预热和活跃阶段），并可直接将捕获的记录导出到 TensorBoard 进行图形化展示。"}]},{"ID":"20250513115422-cznijtj","Type":"NodeParagraph","Properties":{"id":"20250513115422-cznijtj","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"细粒度分析：除了捕捉整体执行时间，PyTorch Profiler 还可以记录每个操作的输入输出形状、调用次数等信息，便于深入了解性能瓶颈。"}]},{"ID":"20250513115422-9ejg38b","Type":"NodeParagraph","Properties":{"id":"20250513115422-9ejg38b","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"灵活定制和低开销：用户可以根据需要选择捕获的活动（如 CPU、CUDA），并设置调度策略以控制 profiler 的开销。"}]},{"ID":"20250513115422-6xrk7pu","Type":"NodeList","ListData":{},"Properties":{"id":"20250513115422-6xrk7pu","updated":"20250513115649"},"Children":[{"ID":"20250513115422-01276la","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-01276la","updated":"20250513115649"},"Children":[{"ID":"20250513115422-kyzw1ih","Type":"NodeParagraph","Properties":{"id":"20250513115422-kyzw1ih","updated":"20250513115649"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"示例"}]}]}]},{"ID":"20250513115422-vl82zn9","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513115422-vl82zn9","updated":"20250513115730"},"Children":[{"ID":"20250513115730-o4lvcac","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250513115730-o4lvcac","updated":"20250513115730"},"Children":[{"ID":"20250513115730-l5h56a2","Type":"NodeParagraph","Properties":{"id":"20250513115730-l5h56a2","updated":"20250513115730"},"Children":[{"Type":"NodeText","Data":"基本使用方式（torch.profiler.schedule 用于设置等待、预热和活跃记录阶段。捕获的数据通过 tensorboard"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"trace"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"handler 保存到指定目录，然后你可以通过 TensorBoard 来查看）"}]}]}]},{"ID":"20250513115701-syae3zn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250513115701-syae3zn","updated":"20250513115721"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"import torch\nimport torch.profiler\n\n#使用 torch.profiler.profile 捕获 CPU 和 GPU 活动\nwith torch.profiler.profile(\n\n   activities=[\n\n       torch.profiler.ProfilerActivity.CPU,\n\n       torch.profiler.ProfilerActivity.CUDA\n\n    ],\n\n   schedule=torch.profiler.schedule(wait=1, warmup=1, active=3, repeat=1),\n\n   on_trace_ready=torch.profiler.tensorboard_trace_handler('./log'),\n\n   record_shapes=True\n\n) as prof:\n\n    for step, (inputs, labels) in enumerate(train_loader):\n\n        # 模型训练步骤\n\n       optimizer.zero_grad()\n\n        outputs = model(inputs)\n\n        loss = criterion(outputs, labels)\n\n       loss.backward()\n\n       optimizer.step()\n\n       prof.step()  # 记录每一步\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250513115422-etj0cck","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513115422-etj0cck","updated":"20250513115728"},"Children":[{"ID":"20250513115728-2vx180l","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20250513115728-2vx180l","updated":"20250513115728"},"Children":[{"ID":"20250513115728-rh4qk99","Type":"NodeParagraph","Properties":{"id":"20250513115728-rh4qk99","updated":"20250513115728"},"Children":[{"Type":"NodeText","Data":"查看采样结果：启动 TensorBoard 后，选择对应日志目录，就可以看到 PyTorch Profiler 输出的时间线、操作调用图和各个 op 的详细信息。"}]}]}]},{"ID":"20250513115422-t4u8sbb","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20250513115422-t4u8sbb","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"主要区别"}]},{"ID":"20250513115422-qg7y9sh","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513115422-qg7y9sh","updated":"20250513115422"},"Children":[{"ID":"20250513115422-ffpa7ni","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250513115422-ffpa7ni","updated":"20250513115422"},"Children":[{"ID":"20250513115422-xl34qbk","Type":"NodeParagraph","Properties":{"id":"20250513115422-xl34qbk","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"集成方式与显示效果"}]},{"ID":"20250513115422-eunauub","Type":"NodeList","ListData":{},"Properties":{"id":"20250513115422-eunauub","updated":"20250513115422"},"Children":[{"ID":"20250513115422-20k7u2o","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-20k7u2o","updated":"20250513115422"},"Children":[{"ID":"20250513115422-d9n6ljb","Type":"NodeParagraph","Properties":{"id":"20250513115422-d9n6ljb","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"TensorFlow Profiler依托 TensorBoard 展示，界面更整合，适合 TensorFlow 用户使用。它的图形化视图（例如步骤分解、输入管道图、GPU 内核统计等）直观展示模型各部分的性能瓶颈。"}]}]},{"ID":"20250513115422-p7y5kz1","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-p7y5kz1","updated":"20250513115422"},"Children":[{"ID":"20250513115422-hdpxgcp","Type":"NodeParagraph","Properties":{"id":"20250513115422-hdpxgcp","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"PyTorch Profiler由于 PyTorch 使用动态图计算，捕获的数据灵活多样。其可以通过上下文管理器设置捕获策略，并将数据导出后在 TensorBoard 或其他工具中查看。它更适合需要对每个迭代进行详细调试的场景。"}]}]}]}]},{"ID":"20250513115422-b7ddpee","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20250513115422-b7ddpee","updated":"20250513115422"},"Children":[{"ID":"20250513115422-c7es5mi","Type":"NodeParagraph","Properties":{"id":"20250513115422-c7es5mi","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"使用便捷性"}]}]}]},{"ID":"20250513115422-acahquv","Type":"NodeList","ListData":{},"Properties":{"id":"20250513115422-acahquv","updated":"20250513115422"},"Children":[{"ID":"20250513115422-y8o3a52","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-y8o3a52","updated":"20250513115422"},"Children":[{"ID":"20250513115422-vrs6mo2","Type":"NodeParagraph","Properties":{"id":"20250513115422-vrs6mo2","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"TensorFlow Profiler 适合那些基于 Keras 的训练，配置简单，只需通过回调函数或上下文管理器轻松启用。"}]}]},{"ID":"20250513115422-xehstrv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-xehstrv","updated":"20250513115422"},"Children":[{"ID":"20250513115422-9gv27ar","Type":"NodeParagraph","Properties":{"id":"20250513115422-9gv27ar","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"PyTorch Profiler 需要在训练代码中明确添加捕获代码，并对调度策略进行设置，但由于其灵活性，可以更精细地控制捕获范围和分析深度。"}]}]}]},{"ID":"20250513115422-ytvkuks","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513115422-ytvkuks","updated":"20250513115422"},"Children":[{"ID":"20250513115422-ex6gp4h","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250513115422-ex6gp4h","updated":"20250513115422"},"Children":[{"ID":"20250513115422-0m8q6eu","Type":"NodeParagraph","Properties":{"id":"20250513115422-0m8q6eu","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"数据收集与开销"}]}]}]},{"ID":"20250513115422-0vy8rfp","Type":"NodeList","ListData":{},"Properties":{"id":"20250513115422-0vy8rfp","updated":"20250513115422"},"Children":[{"ID":"20250513115422-lmkpnbj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-lmkpnbj","updated":"20250513115422"},"Children":[{"ID":"20250513115422-ovwtsq9","Type":"NodeParagraph","Properties":{"id":"20250513115422-ovwtsq9","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"TensorFlow Profiler 在运行静态计算图时能够提前对整个图进行优化和瓶颈分析，通常适合批量处理的情况。"}]}]},{"ID":"20250513115422-wuq4iud","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-wuq4iud","updated":"20250513115422"},"Children":[{"ID":"20250513115422-p0n4rus","Type":"NodeParagraph","Properties":{"id":"20250513115422-p0n4rus","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"PyTorch Profiler 可以针对每个小批次进行采样，但需要注意提前进行“热身”以捕获稳定状态下的数据，避免初始异步状态干扰测量结果。"}]}]}]},{"ID":"20250513115422-esz8tl2","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20250513115422-esz8tl2","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"PyTorch Profiler vs TensorFlow Profiler 性能对比（截至 2025）"}]},{"ID":"20250513115422-j4s018c","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250513115422-j4s018c","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"分析能力"}]},{"ID":"20250513115422-aajathu","Type":"NodeList","ListData":{},"Properties":{"id":"20250513115422-aajathu","updated":"20250513115422"},"Children":[{"ID":"20250513115422-00f91sb","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-00f91sb","updated":"20250513115422"},"Children":[{"ID":"20250513115422-q07mvp8","Type":"NodeParagraph","Properties":{"id":"20250513115422-q07mvp8","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"PyTorch Profiler：基于torch.profiler API，采集模型训练/推理过程中的性能指标"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/docs/stable/profiler.html#:~:text=PyTorch%20Profiler%20is%20a%20tool,and%20visualize%20the%20execution%20trace","TextMarkTextContent":"pytorch.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/blog/introducing-pytorch-profiler-the-new-and-improved-performance-tool/#:~:text=of%20that%20information,profiler%20is%20visualized%20for%20the","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。它记录每个算子在 CPU/GPU 上的执行时间、GPU 内核调用、内存分配等信息，可选地保存算子输入形状（record_shapes=True）、调用栈（with_stack=True）、FLOPs估算和模块层级信息"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/docs/stable/profiler.html#:~:text=PyTorch%20Profiler%20is%20a%20tool,and%20visualize%20the%20execution%20trace","TextMarkTextContent":"pytorch.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/docs/stable/profiler.html#:~:text=,XPU","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。这些数据可用来定位最耗时的算子及其来源。"}]}]},{"ID":"20250513115422-xiqvnr8","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-xiqvnr8","updated":"20250513115422"},"Children":[{"ID":"20250513115422-s7xueh5","Type":"NodeParagraph","Properties":{"id":"20250513115422-s7xueh5","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"TensorFlow Profiler：通过 TensorBoard Profile 插件展示分析结果，收集每个 TF 操作（Op）的耗时和内存占用"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/profiler#:~:text=Profiling%20helps%20understand%20the%20hardware,make%20the%20model%20execute%20faster","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。概览页提供平均步时、主机/设备时间占比、FP16/FP32 使用率等指标"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=1,fp16","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"，Trace Viewer 按时间线细分主机和 GPU 上的操作执行，并以名称空间分组显示前向、后向、优化等阶段"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=Below%20is%20an%20image%20of,for%20device%20to%20host%20copy","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。此外，它还能分析 CPU 与 GPU 之间的数据拷贝和空闲时间，帮助定位数据流水线与设备利用率瓶颈"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=Below%20is%20an%20image%20of,for%20device%20to%20host%20copy","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/profiler#:~:text=Profiling%20helps%20understand%20the%20hardware,make%20the%20model%20execute%20faster","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。"}]}]}]},{"ID":"20250513115422-nx5pz22","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"||","id":"20250513115422-nx5pz22","updated":"20250513115422"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"特性"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"PyTorch Profiler"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"TensorFlow Profiler"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"时间/内存统计"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"收集算子在CPU/GPU上的执行时间和内存使用，支持开启profile_memory记录分配详情"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/docs/stable/profiler.html#:~:text=PyTorch%20Profiler%20is%20a%20tool,and%20visualize%20the%20execution%20trace","TextMarkTextContent":"pytorch.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/blog/introducing-pytorch-profiler-the-new-and-improved-performance-tool/#:~:text=of%20that%20information,profiler%20is%20visualized%20for%20the","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"统计各TF操作在主机和设备上的耗时与内存占用"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/profiler#:~:text=Profiling%20helps%20understand%20the%20hardware,make%20the%20model%20execute%20faster","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=1,fp16","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"；概览页显示总步时、设备计算时间、主机计算时间等。"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"算子级统计"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"列出每个PyTorch算子的耗时（含自身和子调用），并区分自耗时与总耗时"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=The%20operator%20view%20displays%20the,on%20the%20host%20or%20device","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"；可按模块/层级查看调用栈，分析算子来源。"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"可查看每个TF Op的执行次数和耗时，Trace Viewer中按Name Scope和线程组织显示执行过程"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=Below%20is%20an%20image%20of,for%20device%20to%20host%20copy","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。TensorFlow还提供Op统计页面（如TF_OpStats）显示各操作汇总。"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"层级/调用栈"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"支持with_stack=True记录源代码调用位置，可在TensorBoard中追溯具体算子属于哪段代码"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=The%20operator%20view%20displays%20the,on%20the%20host%20or%20device","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"利用命名空间（name scope）分组操作，在Trace Viewer中可展开查看不同子图或函数调用的活动"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=Below%20is%20an%20image%20of,for%20device%20to%20host%20copy","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"硬件信息"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"借助NVIDIA CUPTI获取GPU内核执行事件，可监控Tensor Core使用率、SM利用率等硬件指标"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/blog/introducing-pytorch-profiler-the-new-and-improved-performance-tool/#:~:text=PyTorch%20Profiler%20is%20the%20next,in%20the%20profiler%20context%20manager","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"显示GPU上各计算流（stream）中的计算与拷贝活动；能够量化主机-设备通信占比，分析GPU空闲时间"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=Below%20is%20an%20image%20of,for%20device%20to%20host%20copy","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。TensorBoard还可显示每个GPU设备的概要信息。"}]}]}]},{"ID":"20250513115422-isz3ogy","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250513115422-isz3ogy","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"可视化与用户界面"}]},{"ID":"20250513115422-8jq2q0s","Type":"NodeParagraph","Properties":{"id":"20250513115422-8jq2q0s","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"PyTorch Profiler 的可视化通过专门的 TensorBoard 插件提供"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=The%20%E2%80%9CGPU%20Summary%E2%80%9D%20panel%20shows,of%20these%20metrics%20are%20here","TextMarkTextContent":"pytorch.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=The%20operator%20view%20displays%20the,on%20the%20host%20or%20device","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。概览页面（Overview）展示GPU 配置信息、使用率以及“Step Time Breakdown”步骤时间分布图"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=The%20%E2%80%9CGPU%20Summary%E2%80%9D%20panel%20shows,of%20these%20metrics%20are%20here","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"；底部“Performance Recommendation”板块根据分析数据自动标出性能热点并给出优化建议"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=The%20bottom%20%E2%80%9CPerformance%20Recommendation%E2%80%9D%20uses,gives%20you%20actionable%20optimization%20suggestions","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。在 “Operator View” 中，所有PyTorch 算子的自耗时（不含子算子）和总耗时一览无余"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=The%20operator%20view%20displays%20the,on%20the%20host%20or%20device","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"；点击算子可查看其调用栈，有助于追踪算子来源"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=The%20operator%20view%20displays%20the,on%20the%20host%20or%20device","TextMarkTextContent":"pytorch.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。"}]},{"ID":"20250513115422-7e83uj6","Type":"NodeParagraph","Properties":{"id":"20250513115422-7e83uj6","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"TensorFlow Profiler 结果整合在 TensorBoard 的 Profile 插件中。概览页（Performance Summary）给出平均步时、主机 vs 设备时间分布、16/32 位精度占比等关键信息，并绘制每步的时序图"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=1,fp16","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=The%20first%20step%20in%20GPU,spent%20in%20the%20input%20pipeline","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。在下方“Recommendation for Next Step”区域，系统根据采样数据提示潜在瓶颈（如输入瓶颈、内核启动开销高等）以及优化建议"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=1,fp16","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=The%20first%20step%20in%20GPU,spent%20in%20the%20input%20pipeline","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。Trace Viewer 以时间线形式显示所有操作，按 Name Scope 划分模型阶段（前向、后向、优化器等）并标出主机线程和 GPU 上的事件"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=Below%20is%20an%20image%20of,for%20device%20to%20host%20copy","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。Memory Viewer 展示内存使用随时间的曲线，Input Pipeline Analyzer 提供输入流水线各阶段耗时分布，并自动检测 tf.data 导致的瓶颈"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/profiler#:~:text=The%20tf,recommendations%20are%20based%20on%20this","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=The%20first%20step%20in%20GPU,spent%20in%20the%20input%20pipeline","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。"}]},{"ID":"20250513115422-3hf0he1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250513115422-3hf0he1","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"与训练集成的便捷性"}]},{"ID":"20250513115422-mlprpfn","Type":"NodeList","ListData":{},"Properties":{"id":"20250513115422-mlprpfn","updated":"20250513115422"},"Children":[{"ID":"20250513115422-rb23afn","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-rb23afn","updated":"20250513115422"},"Children":[{"ID":"20250513115422-qmkls8a","Type":"NodeParagraph","Properties":{"id":"20250513115422-qmkls8a","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"PyTorch Profiler：提供简洁的 Python API，可将训练循环包裹在 torch.profiler.profile 上下文管理器中"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/blog/introducing-pytorch-profiler-the-new-and-improved-performance-tool/#:~:text=with%20torch,on_trace_ready%3Dtensorboard_trace_handler%2C%20with_stack%3DTrue","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。用户可以通过 schedule 参数定义采样周期（wait/warmup/active）并在每次采样完成时触发回调（如 tensorboard_trace_handler）写出日志"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/blog/introducing-pytorch-profiler-the-new-and-improved-performance-tool/#:~:text=with%20torch,on_trace_ready%3Dtensorboard_trace_handler%2C%20with_stack%3DTrue","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。这样无需手动启动/停止 Profiling，且能在训练过程中灵活控制采样窗口。Profiler 会将结果输出为 TensorBoard 可读的日志文件，可直接使用 tensorboard --logdir 查看"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/blog/introducing-pytorch-profiler-the-new-and-improved-performance-tool/#:~:text=with%20torch,on_trace_ready%3Dtensorboard_trace_handler%2C%20with_stack%3DTrue","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。在多进程或分布式训练（如 DDP）中，只需为每个进程指定不同的 worker_name（默认使用 hostname+pid），就可以将所有配置写到同一日志目录，方便合并分析"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/docs/stable/profiler.html#:~:text=Outputs%20tracing%20files%20to%20directory,pid%5D%E2%80%99%20by%20default","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20250513115422-3vn0h7l","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-3vn0h7l","updated":"20250513115422"},"Children":[{"ID":"20250513115422-pdjyy0z","Type":"NodeParagraph","Properties":{"id":"20250513115422-pdjyy0z","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"TensorFlow Profiler：通过tf.profiler.experimental.Profile(logdir) 上下文管理器或 Keras 的tf.keras.callbacks.TensorBoard(profile_batch=...) 轻松集成"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/api_docs/python/tf/profiler/experimental/Profile#:~:text=","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。进入上下文时开始记录，退出时将性能数据保存到指定 logdir"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/api_docs/python/tf/profiler/experimental/Profile#:~:text=","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。随后在启动 TensorBoard 时选择 Profile 标签页，即可可视化分析结果。ProfilerOptions 支持细粒度控制（如仅分析第 N 步或连续几步），便于长时间训练中抽样。对于分布式训练，Profiler 与 tf.distribute 策略兼容，可对多卡或多节点训练进行汇总分析。PyTorch 和 TensorFlow 的 Profiling 都能够在 Jupyter/Notebook 环境中使用，只需在后台启动 TensorBoard 并打开浏览器（注意目前 PyTorch Profiler 插件在 Safari 中可能不完全支持）。"}]}]}]},{"ID":"20250513115422-gq5uesh","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250513115422-gq5uesh","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"性能瓶颈诊断与优化建议"}]},{"ID":"20250513115422-4pm43pm","Type":"NodeList","ListData":{},"Properties":{"id":"20250513115422-4pm43pm","updated":"20250513115422"},"Children":[{"ID":"20250513115422-p5yd25n","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-p5yd25n","updated":"20250513115422"},"Children":[{"ID":"20250513115422-pxdt5xl","Type":"NodeParagraph","Properties":{"id":"20250513115422-pxdt5xl","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"PyTorch Profiler：内置自动分析模块，能够根据采样数据检测性能瓶颈"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/blog/introducing-pytorch-profiler-the-new-and-improved-performance-tool/#:~:text=of%20that%20information,profiler%20is%20visualized%20for%20the","TextMarkTextContent":"pytorch.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=The%20bottom%20%E2%80%9CPerformance%20Recommendation%E2%80%9D%20uses,gives%20you%20actionable%20optimization%20suggestions","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。Profiler Plugin 的“Performance Recommendation”会突出耗时大的操作和阶段，并给出优化提示"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=The%20bottom%20%E2%80%9CPerformance%20Recommendation%E2%80%9D%20uses,gives%20you%20actionable%20optimization%20suggestions","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。例如，示例中发现输入数据加载占比较高，就提示增加数据加载并行度；发现 GPU 利用率低，则建议增大并行度或使用混合精度"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/blog/introducing-pytorch-profiler-the-new-and-improved-performance-tool/#:~:text=of%20that%20information,profiler%20is%20visualized%20for%20the","TextMarkTextContent":"pytorch.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/tutorials/intermediate/tensorboard_profiler_tutorial.html#:~:text=The%20bottom%20%E2%80%9CPerformance%20Recommendation%E2%80%9D%20uses,gives%20you%20actionable%20optimization%20suggestions","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。用户可参考这些建议并结合优化实践（如增加 num_workers、启用 fp16、使用 torch.cuda.amp 等）来改进性能。"}]}]},{"ID":"20250513115422-3ut1k23","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513115422-3ut1k23","updated":"20250513115422"},"Children":[{"ID":"20250513115422-jpu5vn0","Type":"NodeParagraph","Properties":{"id":"20250513115422-jpu5vn0","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"TensorFlow Profiler：提供丰富的自动诊断工具"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/profiler#:~:text=The%20tf,recommendations%20are%20based%20on%20this","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=also%20on%20the%20trace%20viewer,flag%20does","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。TensorBoard 中的 Input Pipeline Analyzer 会检测 tf.data 流水线中的瓶颈步骤并建议使用并行映射、预取、缓存等优化"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/profiler#:~:text=The%20tf,recommendations%20are%20based%20on%20this","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。在概览页面和 Trace Viewer 中，Profiler 会标出设备空闲时间或过多小内核的问题，并可能推荐设置 steps_per_execution（减少内核启动开销）等策略"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=also%20on%20the%20trace%20viewer,flag%20does","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。此外，Profiler 可以评估混合精度和 XLA 加速的效果，如果发现 FP32 运算占比较高或图优化不足，也会提示用户启用 tf.keras.mixed_precision 或编译函数"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=1,fp16","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=1,GPU%20single%20host","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。总体而言，TensorFlow Profiler 侧重于给出改进输入流水线和计算图的具体建议，而 PyTorch Profiler 则关注算子级的热点检测。"}]}]}]},{"ID":"20250513115422-3zstsnn","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250513115422-3zstsnn","updated":"20250513115422"},"Children":[{"Type":"NodeText","Data":"平台支持"}]},{"ID":"20250513115422-dr85a7j","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"||","id":"20250513115422-dr85a7j","updated":"20250513115422"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"平台/功能"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"PyTorch Profiler"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeText","Data":"TensorFlow Profiler"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"CPU"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅原生支持CPU操作的分析。"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅原生支持CPU分析"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/profiler#:~:text=Profiling%20helps%20understand%20the%20hardware,make%20the%20model%20execute%20faster","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"NVIDIA GPU"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅完全支持。基于NVIDIA CUPTI采集GPU内核事件，可监控GPU利用率和Tensor Core使用情况"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/blog/introducing-pytorch-profiler-the-new-and-improved-performance-tool/#:~:text=PyTorch%20Profiler%20is%20the%20next,in%20the%20profiler%20context%20manager","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅完全支持。提供GPU计算与拷贝分析，显示各GPU Stream活动；概览页给出核心占比（如FP16使用率）"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=1,fp16","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"其他GPU（如AMD ROCm）"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅支持。PyTorch Profiler支持AMD GPU/XPU（使用ROCm下的Profiling活动）"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/docs/stable/profiler.html#:~:text=,XPU","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"🟡部分支持。TensorFlow官方主要针对CUDA构建，AMD GPU支持较弱（需要依赖XLA或第三方扩展）。"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"TPU"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"🟡非原生。PyTorch Profiler本身不直接支持TPU，需借助PyTorch/XLA进行分析。"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅原生支持。可通过Cloud TPU的TensorBoard Profiler插件进行分析"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/profiler#:~:text=If%20you%20want%20to%20profile,to%20the%20Cloud%20TPU%20guide","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"混合精度"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅支持。Profiler UI可展示Tensor Core加速占比和FP16运算情况"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/blog/introducing-pytorch-profiler-the-new-and-improved-performance-tool/#:~:text=PyTorch%20Profiler%20is%20the%20next,in%20the%20profiler%20context%20manager","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。用户可手动启用torch.cuda.amp并对比性能。"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅支持。概览页显示FP16 vs FP32运算比重"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.tensorflow.org/guide/gpu_performance_analysis#:~:text=1,fp16","TextMarkTextContent":"tensorflow.org"},{"Type":"NodeText","Data":"。Profiler可提示混合精度下的性能改进。"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"多GPU"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅支持。可分析多卡训练，每个进程输出独立Profile，统一到一个TensorBoard查看"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/docs/stable/profiler.html#:~:text=Outputs%20tracing%20files%20to%20directory,pid%5D%E2%80%99%20by%20default","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅支持。与tf.distribute兼容，可在单主机多GPU或多主机多GPU环境下收集各设备数据。"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"多机"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅支持。通过分布式运行和为各Worker指定唯一名，将日志合并分析"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://pytorch.org/docs/stable/profiler.html#:~:text=Outputs%20tracing%20files%20to%20directory,pid%5D%E2%80%99%20by%20default","TextMarkTextContent":"pytorch.org"},{"Type":"NodeText","Data":"。"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"✅支持。配合分布式策略（如MultiWorkerMirroredStrategy）使用，可在多节点集群上分析"}]}]}]}]}