{"ID":"20250513154442-j1dx5ue","Spec":"1","Type":"NodeDocument","Properties":{"id":"20250513154442-j1dx5ue","title":"相关概念总结","type":"doc","updated":"20250513154709"},"Children":[{"ID":"20250513154512-xzblck2","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250513154512-xzblck2","updated":"20250513154605"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"性能测试和性能回归测试"}]},{"ID":"20250513154542-ead7ru5","Type":"NodeParagraph","Properties":{"id":"20250513154542-ead7ru5","updated":"20250513154545"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"性能测试和性能回归测试"},{"Type":"NodeText","Data":"之间是是有紧密关联的。性能测试旨在全面评估系统在各种负载条件下的响应时间、吞吐量、资源使用等指标，而性能回归测试则是在系统经过代码修改、功能更新或调优后，再次运行之前的性能测试用例，以确保这些变更没有导致性能下降。换句话说，性能回归测试是性能测试的一个重要组成部分，用于及时捕捉和防止因更新而引入的性能问题，从而保证系统始终能满足既定的性能标准。"}]},{"ID":"20250513154512-uq6vrf8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250513154512-uq6vrf8","updated":"20250513154709"},"Children":[{"Type":"NodeText","Data":"性能建模"}]},{"ID":"20250513154601-c2whpxx","Type":"NodeParagraph","Properties":{"id":"20250513154601-c2whpxx","updated":"20250513154605"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"性能建模"},{"Type":"NodeText","Data":"是一种利用数学、统计、仿真与分析方法建立系统或软件性能预测模型的技术。简单来说，性能建模的目标在于在系统实际实现之前，构造一套（或多套）抽象模型，通过定量分析或仿真来预估系统在特定工作负载下的响应时间、吞吐量、资  源使用率等关键性能指标，从而帮助设计者发现潜在的性能瓶颈和改进方向。"}]},{"ID":"20250513154512-b7ulvdx","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513154512-b7ulvdx","updated":"20250513154512"},"Children":[{"ID":"20250513154512-xgktn39","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250513154512-xgktn39","updated":"20250513154512"},"Children":[{"ID":"20250513154512-76vzdtj","Type":"NodeParagraph","Properties":{"id":"20250513154512-76vzdtj","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"性能建模的定义和目的"}]}]}]},{"ID":"20250513154512-wbqejod","Type":"NodeList","ListData":{},"Properties":{"id":"20250513154512-wbqejod","updated":"20250513154512"},"Children":[{"ID":"20250513154512-ogg55k3","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-ogg55k3","updated":"20250513154512"},"Children":[{"ID":"20250513154512-j8g6wr3","Type":"NodeParagraph","Properties":{"id":"20250513154512-j8g6wr3","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"定义\n性能建模是指在系统设计早期阶段，根据系统的结构和预期负载，通过建立数学模型或采用仿真技术来描述系统的动态行为和性能特性。这些模型能够预测系统在实际投入运行后的响应时间、处理能力、资源需求等指标，从而为设计决策提供依据。"}]}]},{"ID":"20250513154512-g3lhnib","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-g3lhnib","updated":"20250513154512"},"Children":[{"ID":"20250513154512-5sue0mv","Type":"NodeParagraph","Properties":{"id":"20250513154512-5sue0mv","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"目的"}]},{"ID":"20250513154512-e8y3q7v","Type":"NodeList","ListData":{},"Properties":{"id":"20250513154512-e8y3q7v","updated":"20250513154512"},"Children":[{"ID":"20250513154512-det4b0q","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-det4b0q","updated":"20250513154512"},"Children":[{"ID":"20250513154512-2spmjii","Type":"NodeParagraph","Properties":{"id":"20250513154512-2spmjii","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"提前评估与验证：在硬件或软件系统投入实现之前，利用模型评估其是否能够满足设计阶段设定的性能目标。"}]}]},{"ID":"20250513154512-e6zg72f","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-e6zg72f","updated":"20250513154512"},"Children":[{"ID":"20250513154512-ttxq5cv","Type":"NodeParagraph","Properties":{"id":"20250513154512-ttxq5cv","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"风险预测与瓶颈识别：及早发现设计中可能存在的性能问题，从而在系统开发初期就采取补救措施，降低后期修改所带来的高昂成本。"}]}]},{"ID":"20250513154512-922nodf","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-922nodf","updated":"20250513154512"},"Children":[{"ID":"20250513154512-g439iku","Type":"NodeParagraph","Properties":{"id":"20250513154512-g439iku","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"指导架构决策：通过量化不同设计选择对系统性能的影响，帮助系统架构师在多种方案中进行权衡选择。"}]}]}]}]}]},{"ID":"20250513154512-mgec47y","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513154512-mgec47y","updated":"20250513154512"},"Children":[{"ID":"20250513154512-13024yc","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20250513154512-13024yc","updated":"20250513154512"},"Children":[{"ID":"20250513154512-msik1bo","Type":"NodeParagraph","Properties":{"id":"20250513154512-msik1bo","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"性能建模的方法和技术"}]}]}]},{"ID":"20250513154512-hw33b5j","Type":"NodeParagraph","Properties":{"id":"20250513154512-hw33b5j","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"性能建模通常可以分为以下几大类："}]},{"ID":"20250513154512-q2ronm9","Type":"NodeList","ListData":{},"Properties":{"id":"20250513154512-q2ronm9","updated":"20250513154512"},"Children":[{"ID":"20250513154512-uudqull","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-uudqull","updated":"20250513154512"},"Children":[{"ID":"20250513154512-h39hrl3","Type":"NodeParagraph","Properties":{"id":"20250513154512-h39hrl3","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"数学和解析建模\n运用数学公式和理论（例如队列理论、概率论、马尔可夫模型、Petri网等）描述系统的运行过程。例如，在计算机网络性能中常利用排队模型推导系统延迟和吞吐量的关系。"}]}]},{"ID":"20250513154512-z84s19i","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-z84s19i","updated":"20250513154512"},"Children":[{"ID":"20250513154512-x2aigi8","Type":"NodeParagraph","Properties":{"id":"20250513154512-x2aigi8","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"离散事件仿真\n使用离散事件模拟（DES）的方式建立系统运行的时间进程模型。这类方法在模拟复杂系统中的事件与状态转换时较为直观，如使用SimGrid、OMNeT++等工具模拟通信网络或多核处理器的动态行为。"}]}]},{"ID":"20250513154512-j518vgq","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-j518vgq","updated":"20250513154512"},"Children":[{"ID":"20250513154512-rn5c2bq","Type":"NodeParagraph","Properties":{"id":"20250513154512-rn5c2bq","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"基于系统测量的建模\n利用实际系统的性能计数器、监控工具（如Perf、VTune）收集数据，构造“经验模型”或校准模型，使得模型能够更贴近真实环境。"}]}]}]},{"ID":"20250513154512-8cj4lwe","Type":"NodeParagraph","Properties":{"id":"20250513154512-8cj4lwe","updated":"20250513154623"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"能否根据构建的性能模型来设计 DNN 性能的蜕变关系？"}]},{"ID":"20250513154512-jil51ew","Type":"NodeParagraph","Properties":{"id":"20250513154512-jil51ew","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"在 DNN（深度神经网络）的性能测试中，蜕变测试（Metamorphic Testing, MT）是一种极具潜力的手段，因为它能够在没有明确“测试预期”（Oracle）的情况下，通过验证输入与输出之间应遵循的“蜕变关系”来发现缺陷。对于 DNN 性能来说，这里的“蜕变关系”主要描述在特定输入或系统条件发生改变时，性能指标（如响应时间、吞吐率、功耗、资源占用等）应呈现出的规律或不变性。理论上，可以利用针对 DNN 性能构建的性能模型来指导蜕变关系的设计。具体来说，有以下几个方面可以考虑："}]},{"ID":"20250513154512-e3njtde","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513154512-e3njtde","updated":"20250513154709"},"Children":[{"ID":"20250513154512-7pdkmof","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250513154512-7pdkmof","updated":"20250513154709"},"Children":[{"ID":"20250513154512-rfl7m33","Type":"NodeParagraph","Properties":{"id":"20250513154512-rfl7m33","updated":"20250513154709"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"性能模型作为理论基础"},{"Type":"NodeText","Data":"\n传统上，我们构建的 DNN 性能模型通常描述了不同条件（如输入规模、批大小、并行度、硬件资源配置等）下的性能表现。通过对这些模型的分析，可以得到例如："}]},{"ID":"20250513154512-xtoenc7","Type":"NodeList","ListData":{},"Properties":{"id":"20250513154512-xtoenc7","updated":"20250513154512"},"Children":[{"ID":"20250513154512-i6pmrrf","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-i6pmrrf","updated":"20250513154512"},"Children":[{"ID":"20250513154512-2drxl25","Type":"NodeParagraph","Properties":{"id":"20250513154512-2drxl25","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"输入数据规模与延迟或吞吐量之间的定量关系（例如线性或非线性变化）。"}]}]},{"ID":"20250513154512-q0vqb86","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-q0vqb86","updated":"20250513154512"},"Children":[{"ID":"20250513154512-znjje7e","Type":"NodeParagraph","Properties":{"id":"20250513154512-znjje7e","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"当进行模型优化（比如剪枝、量化或并行化）时，性能变化的比例。"}]}]},{"ID":"20250513154512-azvkexw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-azvkexw","updated":"20250513154512"},"Children":[{"ID":"20250513154512-40xr79e","Type":"NodeParagraph","Properties":{"id":"20250513154512-40xr79e","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"不同硬件（如 GPU、TPU 或 CPU 集群）加速下的相对性能指标。"}]}]}]}]},{"ID":"20250513154512-65o7gi1","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20250513154512-65o7gi1","updated":"20250513154707"},"Children":[{"ID":"20250513154512-08ekjby","Type":"NodeParagraph","Properties":{"id":"20250513154512-08ekjby","updated":"20250513154707"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"基于模型规律构建蜕变关系"},{"Type":"NodeText","Data":"\n根据上面的模型分析，可以定义一些预期的蜕变关系，例如："}]}]}]},{"ID":"20250513154512-x3mmzle","Type":"NodeList","ListData":{},"Properties":{"id":"20250513154512-x3mmzle","updated":"20250513154512"},"Children":[{"ID":"20250513154512-3jihehi","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-3jihehi","updated":"20250513154512"},"Children":[{"ID":"20250513154512-votdlft","Type":"NodeParagraph","Properties":{"id":"20250513154512-votdlft","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"稳定性关系：当在不改变 DNN 结构的前提下，对输入进行某种全局变换（例如对输入的像素值加上一个常数），模型的预测结果应该保持不变，而性能指标（如处理时间、内存占用）则可能只受计算量或数据传输量影响，这种不变性可以作为蜕变关系的一部分。"}]}]},{"ID":"20250513154512-j2pwbim","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-j2pwbim","updated":"20250513154512"},"Children":[{"ID":"20250513154512-5pl0rk8","Type":"NodeParagraph","Properties":{"id":"20250513154512-5pl0rk8","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"扩展性关系：如果增加输入数据的批量大小（batch size）或者改变网络层的宽度（例如增加神经元数目），性能模型可能会预测吞吐量或延迟呈现特定的函数关系，比如线性或次线性增长。这种期望变化的模式，也可以构建为一种蜕变关系。"}]}]},{"ID":"20250513154512-ovltpoy","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-ovltpoy","updated":"20250513154512"},"Children":[{"ID":"20250513154512-p5swsxs","Type":"NodeParagraph","Properties":{"id":"20250513154512-p5swsxs","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"并行处理关系：在多 GPU 或多线程环境下，理论上加速比应满足一定的扩展规律（尽管可能存在瓶颈），这可以转化为“如果改变并行配置，则性能指标应以预定比例改善”的蜕变关系。"}]}]}]},{"ID":"20250513154512-2iu1nik","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513154512-2iu1nik","updated":"20250513154704"},"Children":[{"ID":"20250513154700-awdz80w","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20250513154700-awdz80w","updated":"20250513154704"},"Children":[{"ID":"20250513154700-zjvntye","Type":"NodeParagraph","Properties":{"id":"20250513154700-zjvntye","updated":"20250513154704"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"实际应用中的考虑"},{"Type":"NodeText","Data":"\n利用性能模型设计 DNN 性能蜕变关系时，还需要注意："}]}]}]},{"ID":"20250513154512-gjlkfh8","Type":"NodeList","ListData":{},"Properties":{"id":"20250513154512-gjlkfh8","updated":"20250513154512"},"Children":[{"ID":"20250513154512-ip8v1ei","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-ip8v1ei","updated":"20250513154512"},"Children":[{"ID":"20250513154512-u3lk3i6","Type":"NodeParagraph","Properties":{"id":"20250513154512-u3lk3i6","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"模型假设的准确性：性能模型通常依赖于对系统行为的合理假设，不同模型可能会对瓶颈、内存带宽、计算密集性等有不同的权衡。构建蜕变关系时，必须确保所依据的模型足够贴近实际系统的行为。"}]}]},{"ID":"20250513154512-6wv8f39","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-6wv8f39","updated":"20250513154512"},"Children":[{"ID":"20250513154512-ke8dmf3","Type":"NodeParagraph","Properties":{"id":"20250513154512-ke8dmf3","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"验证与校准：设计出的蜕变关系需要通过实验验证，即将变换后的输入及对应系统性能输出进行对比分析，检查是否满足性能模型所预测的不变性或变化规律。如果不符合，则需要对性能模型或蜕变规则做出相应调整。"}]}]},{"ID":"20250513154512-w930u4u","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513154512-w930u4u","updated":"20250513154512"},"Children":[{"ID":"20250513154512-q0rxwkc","Type":"NodeParagraph","Properties":{"id":"20250513154512-q0rxwkc","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"DNN 特定因素：深度神经网络中可能还涉及模型压缩、量化、分布式训练等技术，这些因素都可能在性能模型中产生特定影响，设计蜕变关系时需要把这些技术因素也考虑进去。"}]}]}]},{"ID":"20250513154512-esqw7mc","Type":"NodeParagraph","Properties":{"id":"20250513154512-esqw7mc","updated":"20250513154634"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"小结"}]},{"ID":"20250513154512-mu29hcj","Type":"NodeParagraph","Properties":{"id":"20250513154512-mu29hcj","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"DNN 性能的蜕变关系是可以利用构建的性能模型进行设计的。"}]},{"ID":"20250513154512-p1ta1l7","Type":"NodeParagraph","Properties":{"id":"20250513154512-p1ta1l7","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"基于性能模型中对 DNN 在不同条件下行为的定量描述，我们可以定义出一系列蜕变关系。这些蜕变关系既可以反映系统在输入变换或环境改变时应该满足的性能不变量或比例关系，也可用于自动化检测 DNN 实现过程中的偏差和性能退化。在实际设计中，这需要研发人员深入理解 DNN 的架构、训练和推理流程，并根据具体的硬件及运行环境来确定测试方案和指标。实际工作中，这往往需要反复的验证与校准，以确保模型预测与实际表现之间的一致性。"}]},{"ID":"20250513154512-y5kc84v","Type":"NodeParagraph","Properties":{"id":"20250513154512-y5kc84v","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"这种方法不仅可以用作 DNN 性能测试中的一种补充手段，而且还能为系统调优提供额外的理论支持和实验依据。"}]},{"ID":"20250513154512-ym8gi3v","Type":"NodeParagraph","Properties":{"id":"20250513154512-ym8gi3v","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"构建性能模型："}]},{"ID":"20250513154512-j7ot6hw","Type":"NodeParagraph","Properties":{"id":"20250513154512-j7ot6hw","updated":"20250513154512"},"Children":[{"Type":"NodeText","Data":"列举应执行性能测试的列表。"}]}]}