{"ID":"20250513192005-8zsy0th","Spec":"1","Type":"NodeDocument","Properties":{"id":"20250513192005-8zsy0th","title":"牛客专项练习总结","type":"doc","updated":"20250513192537"},"Children":[{"ID":"20250513192026-0pitrz4","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20250513192026-0pitrz4","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"专项练习"}]},{"ID":"20250513192026-lhna5d0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250513192026-lhna5d0","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"数组"}]},{"ID":"20250513192026-aoqbmk0","Type":"NodeParagraph","Properties":{"id":"20250513192026-aoqbmk0","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"线性表"},{"Type":"NodeText","Data":"（英语：Linear List）是由n（n≥0）个"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE","TextMarkATitle":"数据","TextMarkTextContent":"数据"},{"Type":"NodeText","Data":"元素（"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zh.wikipedia.org/w/index.php?title=%E7%BB%93%E7%82%B9\u0026amp;action=edit\u0026amp;redlink=1","TextMarkATitle":"结点（页面不存在）","TextMarkTextContent":"结点"},{"Type":"NodeText","Data":"）a[0]，a[1]，a[2]…，a[n-1]组成的"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zh.wikipedia.org/w/index.php?title=%E6%9C%89%E9%99%90%E5%BA%8F%E5%88%97\u0026amp;action=edit\u0026amp;redlink=1","TextMarkATitle":"有限序列（页面不存在）","TextMarkTextContent":"有限序列"},{"Type":"NodeText","Data":"。"}]},{"ID":"20250513192026-p0f3i8g","Type":"NodeParagraph","Properties":{"id":"20250513192026-p0f3i8g","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"其中："}]},{"ID":"20250513192026-stix21n","Type":"NodeList","ListData":{},"Properties":{"id":"20250513192026-stix21n","updated":"20250513192026"},"Children":[{"ID":"20250513192026-htlt1cb","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-htlt1cb","updated":"20250513192026"},"Children":[{"ID":"20250513192026-zszdsgz","Type":"NodeParagraph","Properties":{"id":"20250513192026-zszdsgz","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"数据元素的个数n定义为表的长度 "},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"="}]},{"Type":"NodeText","Data":" \"list\".length() （\"list\".length() "},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"="}]},{"Type":"NodeText","Data":" 0（表里没有一个元素）时称为空表）"}]}]},{"ID":"20250513192026-zkfo5dk","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-zkfo5dk","updated":"20250513192026"},"Children":[{"ID":"20250513192026-ldacnpr","Type":"NodeParagraph","Properties":{"id":"20250513192026-ldacnpr","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"将非空的线性表（n"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"\u003e"}]},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"="}]},{"Type":"NodeText","Data":"1）记作：（a[0]，a[1]，a[2]，…，a[n-1]）"}]}]},{"ID":"20250513192026-uehrupx","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-uehrupx","updated":"20250513192026"},"Children":[{"ID":"20250513192026-gtrnpj3","Type":"NodeParagraph","Properties":{"id":"20250513192026-gtrnpj3","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"数据元素a[i]（0≤i≤n-1）只是个抽象符号，其具体含义在不同情况下可以不同"}]}]}]},{"ID":"20250513192026-w4n46s6","Type":"NodeParagraph","Properties":{"id":"20250513192026-w4n46s6","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"一个数据元素可以由若干个数据项组成。数据元素称为记录，含有大量记录的线性表又称为文件。这种结构具有下列特点："}]},{"ID":"20250513192026-n7dcodn","Type":"NodeList","ListData":{},"Properties":{"id":"20250513192026-n7dcodn","updated":"20250513192026"},"Children":[{"ID":"20250513192026-29pkwo2","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-29pkwo2","updated":"20250513192026"},"Children":[{"ID":"20250513192026-g215giw","Type":"NodeParagraph","Properties":{"id":"20250513192026-g215giw","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"存在一个唯一的没有前驱的（头）数据元素；"}]}]},{"ID":"20250513192026-pvcq8sv","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-pvcq8sv","updated":"20250513192026"},"Children":[{"ID":"20250513192026-xxn6yfq","Type":"NodeParagraph","Properties":{"id":"20250513192026-xxn6yfq","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"存在一个唯一的没有后继的（尾）数据元素；"}]}]},{"ID":"20250513192026-27uq5mw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-27uq5mw","updated":"20250513192026"},"Children":[{"ID":"20250513192026-31rbavg","Type":"NodeParagraph","Properties":{"id":"20250513192026-31rbavg","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"每一个数据元素均有一个直接前驱和一个直接后继数据元素。"}]}]}]},{"ID":"20250513192026-tm57aeg","Type":"NodeParagraph","Properties":{"id":"20250513192026-tm57aeg","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"线性表分类："}]},{"ID":"20250513192026-ucmv3an","Type":"NodeList","ListData":{},"Properties":{"id":"20250513192026-ucmv3an","updated":"20250513192026"},"Children":[{"ID":"20250513192026-ojxbqfc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-ojxbqfc","updated":"20250513192026"},"Children":[{"ID":"20250513192026-8ekv59g","Type":"NodeParagraph","Properties":{"id":"20250513192026-8ekv59g","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"顺序表"}]}]},{"ID":"20250513192026-bk2u989","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-bk2u989","updated":"20250513192026"},"Children":[{"ID":"20250513192026-b2nywl2","Type":"NodeParagraph","Properties":{"id":"20250513192026-b2nywl2","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"链表"}]},{"ID":"20250513192026-pugqp0q","Type":"NodeList","ListData":{},"Properties":{"id":"20250513192026-pugqp0q","updated":"20250513192026"},"Children":[{"ID":"20250513192026-1ulpkyb","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-1ulpkyb","updated":"20250513192026"},"Children":[{"ID":"20250513192026-ert28ww","Type":"NodeParagraph","Properties":{"id":"20250513192026-ert28ww","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"单链表"}]},{"ID":"20250513192026-jbr5n7j","Type":"NodeList","ListData":{},"Properties":{"id":"20250513192026-jbr5n7j","updated":"20250513192026"},"Children":[{"ID":"20250513192026-9y1d9z7","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-9y1d9z7","updated":"20250513192026"},"Children":[{"ID":"20250513192026-p6tyyzl","Type":"NodeParagraph","Properties":{"id":"20250513192026-p6tyyzl","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"动态单链表"}]}]},{"ID":"20250513192026-xpsxl48","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-xpsxl48","updated":"20250513192026"},"Children":[{"ID":"20250513192026-1inbw1i","Type":"NodeParagraph","Properties":{"id":"20250513192026-1inbw1i","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"静态单链表"}]}]}]}]},{"ID":"20250513192026-i5dkzot","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-i5dkzot","updated":"20250513192026"},"Children":[{"ID":"20250513192026-6u1z14b","Type":"NodeParagraph","Properties":{"id":"20250513192026-6u1z14b","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"双链表"}]}]},{"ID":"20250513192026-6vjwf3u","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-6vjwf3u","updated":"20250513192026"},"Children":[{"ID":"20250513192026-pk9f6bh","Type":"NodeParagraph","Properties":{"id":"20250513192026-pk9f6bh","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"循环链表"}]},{"ID":"20250513192026-m03ut0v","Type":"NodeList","ListData":{},"Properties":{"id":"20250513192026-m03ut0v","updated":"20250513192026"},"Children":[{"ID":"20250513192026-yx21iay","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-yx21iay","updated":"20250513192026"},"Children":[{"ID":"20250513192026-3mn6vvj","Type":"NodeParagraph","Properties":{"id":"20250513192026-3mn6vvj","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"单循环链表"}]}]},{"ID":"20250513192026-almilhh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-almilhh","updated":"20250513192026"},"Children":[{"ID":"20250513192026-1hlrz3c","Type":"NodeParagraph","Properties":{"id":"20250513192026-1hlrz3c","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"双循环链表"}]}]}]}]}]}]}]},{"ID":"20250513192026-2yvmqzl","Type":"NodeParagraph","Properties":{"id":"20250513192026-2yvmqzl","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"线性表的顺序存储结构是一种"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"随机存取"},{"Type":"NodeText","Data":"的存储结构，线性表的链式存储结构是一种"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"顺序存取"},{"Type":"NodeText","Data":"的存储结构。"}]},{"ID":"20250513192026-if321mo","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250513192026-if321mo","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"顺序表"}]},{"ID":"20250513192026-q3vd2nd","Type":"NodeParagraph","Properties":{"id":"20250513192026-q3vd2nd","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"顺序表"},{"Type":"NodeText","Data":"是在"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%86%85%E5%AD%98","TextMarkATitle":"计算机内存","TextMarkTextContent":"计算机内存"},{"Type":"NodeText","Data":"中以"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zh.wikipedia.org/wiki/%E6%95%B0%E7%BB%84","TextMarkATitle":"数组","TextMarkTextContent":"数组"},{"Type":"NodeText","Data":"的形式保存的"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zh.wikipedia.org/wiki/%E7%BA%BF%E6%80%A7%E8%A1%A8","TextMarkATitle":"线性表","TextMarkTextContent":"线性表"},{"Type":"NodeText","Data":"，是指用一组"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%9D%80","TextMarkATitle":"地址","TextMarkTextContent":"地址"},{"Type":"NodeText","Data":"连续的"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zh.wikipedia.org/wiki/%E5%AD%98%E5%82%A8%E5%8D%95%E5%85%83","TextMarkATitle":"存储单元","TextMarkTextContent":"存储单元"},{"Type":"NodeText","Data":"依次存储数据元素的线性结构，使得线性表中在逻辑结构上相邻的数据元素存储在相邻的物理存储单元中，即通过数据元素物理存储的相邻关系来反映数据元素之间逻辑上的相邻关系。"}]},{"ID":"20250513192026-ynmobpu","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250513192026-ynmobpu","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"循环队列"}]},{"ID":"20250513192026-pf0ts5f","Type":"NodeParagraph","Properties":{"id":"20250513192026-pf0ts5f","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"队尾指针是rear,队头是front，其中QueueSize为循环队列的最大长度"}]},{"ID":"20250513192026-hce95y4","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513192026-hce95y4","updated":"20250513192026"},"Children":[{"ID":"20250513192026-eqwi7qh","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250513192026-eqwi7qh","updated":"20250513192026"},"Children":[{"ID":"20250513192026-cg9o3sd","Type":"NodeParagraph","Properties":{"id":"20250513192026-cg9o3sd","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"队空条件：rear"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"="}]},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"="}]},{"Type":"NodeText","Data":"front"}]}]},{"ID":"20250513192026-6hu6xte","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20250513192026-6hu6xte","updated":"20250513192026"},"Children":[{"ID":"20250513192026-tu1wp2u","Type":"NodeParagraph","Properties":{"id":"20250513192026-tu1wp2u","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"队满条件：(rear+1) %QueueSIze"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"="}]},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"="}]},{"Type":"NodeText","Data":"front"}]}]},{"ID":"20250513192026-1wdldmp","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20250513192026-1wdldmp","updated":"20250513192026"},"Children":[{"ID":"20250513192026-qxnwr6q","Type":"NodeParagraph","Properties":{"id":"20250513192026-qxnwr6q","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"计算队列长度：（rear-front+QueueSize）%QueueSize"}]}]},{"ID":"20250513192026-be41mab","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20250513192026-be41mab","updated":"20250513192026"},"Children":[{"ID":"20250513192026-hfkp1ju","Type":"NodeParagraph","Properties":{"id":"20250513192026-hfkp1ju","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"入队：（rear+1）%QueueSize  5.出队：（front+1）%QueueSize"}]}]}]},{"ID":"20250513192026-l6zu97m","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250513192026-l6zu97m","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"行主序"}]},{"ID":"20250513192026-wsh8ivs","Type":"NodeParagraph","Properties":{"id":"20250513192026-wsh8ivs","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"在行主序下，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"矩阵元素的存储顺序是按行依次存储的"},{"Type":"NodeText","Data":"，即先存储第一行的所有元素，再存储第二行的所有元素，以此类推。 这种存储方式也被称为C语言风格存储方式，因为C语言默认采用行主序存储方式。"}]},{"ID":"20250513192026-eycrawo","Type":"NodeParagraph","Properties":{"id":"20250513192026-eycrawo","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"数组元素在栈区，链表元素在堆区"}]},{"ID":"20250513192026-t7xvl7l","Type":"NodeParagraph","Properties":{"id":"20250513192026-t7xvl7l","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":" **char*strcpy（char*dest，const char*src）**   //将src复制到dest字符数组中"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250513192026-yqa4cfv","Type":"NodeParagraph","Properties":{"id":"20250513192026-yqa4cfv","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"原生类有8种： int、double、boolean、float、byte、short、long、char 。"}]},{"ID":"20250513192026-ka3d8hx","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250513192026-ka3d8hx","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"疲劳强度测试"}]},{"ID":"20250513192026-rm2sspc","Type":"NodeParagraph","Properties":{"id":"20250513192026-rm2sspc","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"疲劳测试是指"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"通过长时间高强度的运行和压力加载来模拟软件在真实使用环境下的表现"},{"Type":"NodeText","Data":"。 该测试方法主要针对软件在长时间运行后的稳定性进行评估，旨在发现软件在高负载、长时间运行状态下可能出现的问题和性能瓶颈。"}]},{"ID":"20250513192026-rfo7qem","Type":"NodeParagraph","Properties":{"id":"20250513192026-rfo7qem","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"疲劳强度是指材料在无限多次交变载荷作用而不会产生破坏的最大应力，称为疲劳强度或疲劳极限。就像是寻找项目的极值，"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"当到达极值后，会首先出现内存泄漏。"}]},{"ID":"20250513192026-nlnjg05","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250513192026-nlnjg05","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"插桩技术"}]},{"ID":"20250513192026-0vupt8l","Type":"NodeParagraph","Properties":{"id":"20250513192026-0vupt8l","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Mock技术"}]},{"ID":"20250513192026-16bpynl","Type":"NodeParagraph","Properties":{"id":"20250513192026-16bpynl","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Mock"},{"Type":"NodeText","Data":"是一种用于创建虚拟对象或函数的方法，主要用于隔离待测试代码中的依赖项，从而只测试特定功能或逻辑。通过模拟外部依赖（如数据库、API、文件系统等），mock 使得单元测试更加简洁和可控。"}]},{"ID":"20250513192026-hda75cy","Type":"NodeParagraph","Properties":{"id":"20250513192026-hda75cy","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"示例："}]},{"ID":"20250513192026-kpb2pmy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250513192026-kpb2pmy","updated":"20250513192026"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"#待测程序\nimport requests\n\ndef fetch_data_from_api(url):\n response = requests.get(url)\n return response.json()\n\ndef process_data(url):\n data = fetch_data_from_api(url)\n # 假设有一些处理逻辑\n return data['value'] * 2\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250513192026-qwanx6t","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250513192026-qwanx6t","updated":"20250513192026"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"#单元测试\nimport unittest\nfrom unittest.mock import patch\n\nclass TestProcessData(unittest.TestCase):\n    @patch('__main__.fetch_data_from_api')  # mock fetch_data_from_api 函数\n    def test_process_data(self, mock_fetch):\n        # 定义 mock 的返回值\n        mock_fetch.return_value = {'value': 10}\n\n        # 测试 process_data 函数\n        result = process_data('http://example.com/api/data')\n\n        # 验证结果是否正确\n        self.assertEqual(result, 20)\n\n        # 确认 fetch_data_from_api 被调用过一次\n        mock_fetch.assert_called_once_with('http://example.com/api/data')\n\nif __name__ == '__main__':\n    unittest.main()\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250513192026-3on5say","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250513192026-3on5say","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"Stub"}]},{"ID":"20250513192026-8lt30mg","Type":"NodeParagraph","Properties":{"id":"20250513192026-8lt30mg","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"stub"},{"Type":"NodeText","Data":" 是一种用于模拟外部依赖的方法，通常用于替代真实对象或方法的部分功能，而不需要提供完全的实现。与 mock 类似，stub 主要用于隔离待测试代码中的外部依赖，但它通常只关心返回值而非交互。"}]},{"ID":"20250513192026-5btykge","Type":"NodeParagraph","Properties":{"id":"20250513192026-5btykge","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"假设有一个函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"send_email()"},{"Type":"NodeText","Data":"​，它负责发送电子邮件，我们想测试依赖于这个函数的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"notify_user()"},{"Type":"NodeText","Data":"​ 函数。为了避免在测试过程中真的发送电子邮件，我们可以使用 stub 来替代 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"send_email()"},{"Type":"NodeText","Data":"​ 函数。"}]},{"ID":"20250513192026-u8weva1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250513192026-u8weva1","updated":"20250513192026"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"#待测程序\ndef send_email(to, subject, message):\n    # 实际上会发送电子邮件\n    print(f\"Sending email to {to}: {subject}\")\n    return True\n\ndef notify_user(user_email):\n    subject = \"Notification\"\n    message = \"You've got a notification.\"\n    email_status = send_email(user_email, subject, message)\n    return email_status\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250513192026-i0odzd1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250513192026-i0odzd1","updated":"20250513192026"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"#单元测试\nimport unittest\n\nclass StubSendEmail:\n    def __call__(self, to, subject, message):\n        # 假设总是成功发送邮件\n        return True\n\nclass TestNotifyUser(unittest.TestCase):\n    def test_notify_user(self):\n        # 使用 StubSendEmail 替代实际的 send_email 函数\n        stub_send_email = StubSendEmail()\n\n        # 临时替换函数\n        original_send_email = send_email\n        try:\n            global send_email\n            send_email = stub_send_email\n\n            # 测试 notify_user 函数\n            result = notify_user(\"user@example.com\")\n\n            # 验证结果是否正确\n            self.assertTrue(result)\n        finally:\n            # 恢复原始的 send_email 函数\n            send_email = original_send_email\n\nif __name__ == '__main__':\n    unittest.main()\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250513192026-kk34hgb","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250513192026-kk34hgb","updated":"20250513192026"},"Children":[{"ID":"20250513192026-k5m7o9x","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250513192026-k5m7o9x","updated":"20250513192026"},"Children":[{"ID":"20250513192026-ho7lu49","Type":"NodeParagraph","Properties":{"id":"20250513192026-ho7lu49","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"StubSendEmail 类"},{"Type":"NodeText","Data":"：这是一个简单的 stub 类，用来模拟 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"send_email()"},{"Type":"NodeText","Data":"​ 函数的行为。它只是简单地返回 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"True"},{"Type":"NodeText","Data":"​，模拟成功发送邮件。"}]}]},{"ID":"20250513192026-1gae1n8","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20250513192026-1gae1n8","updated":"20250513192026"},"Children":[{"ID":"20250513192026-k72x9mn","Type":"NodeParagraph","Properties":{"id":"20250513192026-k72x9mn","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"测试逻辑"},{"Type":"NodeText","Data":"："}]},{"ID":"20250513192026-hq9ncmh","Type":"NodeList","ListData":{},"Properties":{"id":"20250513192026-hq9ncmh","updated":"20250513192026"},"Children":[{"ID":"20250513192026-xl0uic9","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-xl0uic9","updated":"20250513192026"},"Children":[{"ID":"20250513192026-z5emv65","Type":"NodeParagraph","Properties":{"id":"20250513192026-z5emv65","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"在测试中，我们创建了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"StubSendEmail"},{"Type":"NodeText","Data":"​ 实例，并用它临时替换了原始的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"send_email()"},{"Type":"NodeText","Data":"​ 函数。"}]}]},{"ID":"20250513192026-d5xgbrc","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-d5xgbrc","updated":"20250513192026"},"Children":[{"ID":"20250513192026-ym9f64m","Type":"NodeParagraph","Properties":{"id":"20250513192026-ym9f64m","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"测试完成后，我们恢复了原始的 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"send_email()"},{"Type":"NodeText","Data":"​ 函数，确保其他代码不受影响。"}]}]}]}]},{"ID":"20250513192026-dhlr6qp","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20250513192026-dhlr6qp","updated":"20250513192026"},"Children":[{"ID":"20250513192026-180md2i","Type":"NodeParagraph","Properties":{"id":"20250513192026-180md2i","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"测试目标"},{"Type":"NodeText","Data":"：测试 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"notify_user()"},{"Type":"NodeText","Data":"​ 函数的逻辑，而不需要真正发送电子邮件。"}]}]}]},{"ID":"20250513192026-xwdiu87","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250513192026-xwdiu87","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Mock"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stub"}]},{"ID":"20250513192026-nwdles5","Type":"NodeParagraph","Properties":{"id":"20250513192026-nwdles5","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Mock"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stub"},{"Type":"NodeText","Data":" 的目的都是为了替换外部依赖，但它们的使用场景和关注点有所不同。"}]},{"ID":"20250513192026-qkqkjy1","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250513192026-qkqkjy1","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"1. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"关注点不同"}]},{"ID":"20250513192026-qfs7sgc","Type":"NodeList","ListData":{},"Properties":{"id":"20250513192026-qfs7sgc","updated":"20250513192026"},"Children":[{"ID":"20250513192026-sq548xx","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-sq548xx","updated":"20250513192026"},"Children":[{"ID":"20250513192026-af3h165","Type":"NodeParagraph","Properties":{"id":"20250513192026-af3h165","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Mock"},{"Type":"NodeText","Data":" 主要关注"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"行为"},{"Type":"NodeText","Data":"，即函数或对象是否被正确调用（比如是否调用了、调用次数、传递的参数等）。"}]}]},{"ID":"20250513192026-fydjcg6","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-fydjcg6","updated":"20250513192026"},"Children":[{"ID":"20250513192026-cs8upkk","Type":"NodeParagraph","Properties":{"id":"20250513192026-cs8upkk","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stub"},{"Type":"NodeText","Data":" 主要关注"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"状态"},{"Type":"NodeText","Data":"，即提供虚拟的返回值或数据，以支持测试的执行，而不关注函数是否被调用或调用的方式。"}]}]}]},{"ID":"20250513192026-j0anfhw","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250513192026-j0anfhw","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"2. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用场景"}]},{"ID":"20250513192026-8rjlo6k","Type":"NodeList","ListData":{},"Properties":{"id":"20250513192026-8rjlo6k","updated":"20250513192026"},"Children":[{"ID":"20250513192026-azjiyx2","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-azjiyx2","updated":"20250513192026"},"Children":[{"ID":"20250513192026-b3qqm2f","Type":"NodeParagraph","Properties":{"id":"20250513192026-b3qqm2f","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Mock"},{"Type":"NodeText","Data":" 常用于验证与外部依赖的交互，特别是在测试中需要确认某个方法是否被调用了，调用时传递了什么参数，调用了多少次等。"}]}]},{"ID":"20250513192026-83ywo2h","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-83ywo2h","updated":"20250513192026"},"Children":[{"ID":"20250513192026-ihyq2w8","Type":"NodeParagraph","Properties":{"id":"20250513192026-ihyq2w8","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stub"},{"Type":"NodeText","Data":" 用于替代一些简单的外部依赖，提供预定义的返回值，让待测试代码能够继续执行，但不涉及与外部的交互验证。"}]}]}]},{"ID":"20250513192026-xh3urc6","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250513192026-xh3urc6","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"3. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"行为验证 vs 状态验证"}]},{"ID":"20250513192026-3vhvvyc","Type":"NodeList","ListData":{},"Properties":{"id":"20250513192026-3vhvvyc","updated":"20250513192026"},"Children":[{"ID":"20250513192026-wi2lee0","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-wi2lee0","updated":"20250513192026"},"Children":[{"ID":"20250513192026-i0bi0mh","Type":"NodeParagraph","Properties":{"id":"20250513192026-i0bi0mh","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Mock"},{"Type":"NodeText","Data":" 允许对被替代对象的行为进行验证。比如，你可以检查是否调用了某个方法，或者是否使用了正确的参数。"}]}]},{"ID":"20250513192026-3wdrfzw","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-3wdrfzw","updated":"20250513192026"},"Children":[{"ID":"20250513192026-xnva463","Type":"NodeParagraph","Properties":{"id":"20250513192026-xnva463","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stub"},{"Type":"NodeText","Data":" 不关心行为，只提供必要的数据或返回值，以保证被测试的代码可以正常运行。"}]}]}]},{"ID":"20250513192026-rnvw5hh","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250513192026-rnvw5hh","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"示例对比"}]},{"ID":"20250513192026-i8ey7xd","Type":"NodeParagraph","Properties":{"id":"20250513192026-i8ey7xd","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"假设我们有一个函数 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"send_email()"},{"Type":"NodeText","Data":"​，它用于发送电子邮件。我们想测试 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"notify_user()"},{"Type":"NodeText","Data":"​ 函数，使用不同的方式替代 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"send_email()"},{"Type":"NodeText","Data":"​。"}]},{"ID":"20250513192026-3fljt5e","Type":"NodeHeading","HeadingLevel":6,"Properties":{"id":"20250513192026-3fljt5e","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stub"},{"Type":"NodeText","Data":" 进行测试"}]},{"ID":"20250513192026-2s4w0ij","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250513192026-2s4w0ij","updated":"20250513192026"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"def send_email(to, subject, message):\n    return True  # 实际上会发送邮件\n\ndef notify_user(user_email):\n    subject = \"Notification\"\n    message = \"You've got a notification.\"\n    email_status = send_email(user_email, subject, message)\n    return email_status\n\nclass StubSendEmail:\n    def __call__(self, to, subject, message):\n        return True  # 返回固定的成功结果\n\n# 使用 stub 替代 send_email 函数\nstub_send_email = StubSendEmail()\nsend_email = stub_send_email\nresult = notify_user(\"user@example.com\")\nprint(result)  # 输出: True\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250513192026-s2nifq0","Type":"NodeParagraph","Properties":{"id":"20250513192026-s2nifq0","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stub"},{"Type":"NodeText","Data":" 只是替换了 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"send_email"},{"Type":"NodeText","Data":"​ 函数，提供了一个固定的返回值 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"True"},{"Type":"NodeText","Data":"​，并不验证它是否被调用，或者调用时是否传递了正确的参数。"}]},{"ID":"20250513192026-uk8hvlp","Type":"NodeHeading","HeadingLevel":6,"Properties":{"id":"20250513192026-uk8hvlp","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Mock"},{"Type":"NodeText","Data":" 进行测试"}]},{"ID":"20250513192026-xdqlryr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250513192026-xdqlryr","updated":"20250513192026"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u"},{"Type":"NodeCodeBlockCode","Data":"from unittest.mock import MagicMock\n\ndef send_email(to, subject, message):\n    return True\n\ndef notify_user(user_email):\n    subject = \"Notification\"\n    message = \"You've got a notification.\"\n    email_status = send_email(user_email, subject, message)\n    return email_status\n\n# 创建一个 mock 对象来代替 send_email\nmock_send_email = MagicMock(return_value=True)\nsend_email = mock_send_email\n\nresult = notify_user(\"user@example.com\")\nprint(result)  # 输出: True\n\n# 验证 send_email 是否被调用，传递了正确的参数\nmock_send_email.assert_called_once_with(\"user@example.com\", \"Notification\", \"You've got a notification.\")\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250513192026-igsknnr","Type":"NodeParagraph","Properties":{"id":"20250513192026-igsknnr","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Mock"},{"Type":"NodeText","Data":" 不仅提供了返回值 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"True"},{"Type":"NodeText","Data":"​，还允许我们验证 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"send_email()"},{"Type":"NodeText","Data":"​ 是否被调用了，以及调用时传递的参数是否正确。"}]},{"ID":"20250513192026-xu8cz6o","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250513192026-xu8cz6o","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"关键区别总结"}]},{"ID":"20250513192026-bu2sadh","Type":"NodeTable","TableAligns":[0,0,0],"Properties":{"colgroup":"||","id":"20250513192026-bu2sadh","updated":"20250513192026"},"Children":[{"Type":"NodeTableHead","Data":"thead","Children":[{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"特性"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stub"}]},{"Type":"NodeTableCell","Data":"th","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Mock"}]}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"关注点"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"状态（返回值）"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"行为（方法调用和参数验证）"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用场景"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"提供预定义的返回值"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"验证交互细节，方法调用次数，参数等"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"验证功能"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"不关心方法是否被调用或如何调用"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"可以验证是否调用、调用次数、传递参数等"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"实现复杂度"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"通常较为简单"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"可能涉及更多行为验证，较为复杂"}]}]},{"Type":"NodeTableRow","Data":"tr","Children":[{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"是否灵活"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"返回固定数据"}]},{"Type":"NodeTableCell","Data":"td","Children":[{"Type":"NodeText","Data":"提供灵活的行为控制与验证"}]}]}]},{"ID":"20250513192026-qdsc0om","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20250513192026-qdsc0om","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"总结"}]},{"ID":"20250513192026-yq76f2d","Type":"NodeList","ListData":{},"Properties":{"id":"20250513192026-yq76f2d","updated":"20250513192026"},"Children":[{"ID":"20250513192026-6mz8v7u","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-6mz8v7u","updated":"20250513192026"},"Children":[{"ID":"20250513192026-nxndolj","Type":"NodeParagraph","Properties":{"id":"20250513192026-nxndolj","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Stub"},{"Type":"NodeText","Data":" 关心的是待测试代码的状态变化，比如它是否能正确处理一个特定的返回值。"}]}]},{"ID":"20250513192026-efoofvh","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20250513192026-efoofvh","updated":"20250513192026"},"Children":[{"ID":"20250513192026-8yvkz9i","Type":"NodeParagraph","Properties":{"id":"20250513192026-8yvkz9i","updated":"20250513192026"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Mock"},{"Type":"NodeText","Data":" 关注待测试代码与外部依赖的交互是否正确，比如是否调用了某个方法，传递的参数是否正确。"}]}]}]},{"ID":"20250513192026-g8mutrf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250513192026-g8mutrf","updated":"20250513192526"},"Children":[{"Type":"NodeText","Data":"软件测试"}]},{"ID":"20250513192026-vuck9rx","Type":"NodeParagraph","Properties":{"id":"20250513192026-vuck9rx","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"测试的关键问题是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如何选择测试用例"},{"Type":"NodeText","Data":"。"}]},{"ID":"20250513192026-bbpasgk","Type":"NodeParagraph","Properties":{"id":"20250513192026-bbpasgk","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"软件测试的目的是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"为了发现错误而执行程序的过程"},{"Type":"NodeText","Data":"，并不涉及改正错误。"}]},{"ID":"20250513192026-ge4nt0c","Type":"NodeParagraph","Properties":{"id":"20250513192026-ge4nt0c","updated":"20250513192026"},"Children":[{"Type":"NodeText","Data":"桩(Stub)模块：用以模拟被测模块工作过程中所调用的下层模块。桩模块由被测模块调用，它一般只有很少的数据处理，例如打印入口和返回，以便于检测被测模块语气夏季模块的接口。"}]},{"ID":"20250513192524-sggrya9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250513192524-sggrya9","updated":"20250513192537"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"增量模型(Incremental Model)，又称演化模型"}]},{"ID":"20250513192520-567wsqn","Type":"NodeParagraph","Properties":{"id":"20250513192520-567wsqn","updated":"20250513192520"},"Children":[{"Type":"NodeText","Data":"与建造大厦相同，软件也是一步一步建造起来的。在增量模型中，软件被作为一系列的增量构件来设计、实现、集成和测试、"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"每一个构件是由多种相互作用的模块所形成的提供特定功能的代码片段构成"},{"Type":"NodeText","Data":"。增量模型在各个阶段并不交付一个可运行的完整产品，而是交付满足客户需求的一个子集的可运行产品。整个产品被分解成若干构件，开发人员逐个构件地交付产品，这样做的好处是软件开发可以较好地适应变化，客户可以不断地看到所开发的软件，从而降低开发风险。"}]},{"ID":"20250513192520-02c1al2","Type":"NodeParagraph","Properties":{"id":"20250513192520-02c1al2","updated":"20250513192520"},"Children":[{"Type":"NodeText","Data":"增量模型的基本思想："}]},{"ID":"20250513192520-puy3pbe","Type":"NodeParagraph","Properties":{"id":"20250513192520-puy3pbe","updated":"20250513192520"},"Children":[{"Type":"NodeText","Data":"(1)增量模型属于非整体开发模型，它推迟某些阶段或所有阶段的细节，从而较早的产生工作软件（是属于未开发的）"}]},{"ID":"20250513192520-sc1at6h","Type":"NodeParagraph","Properties":{"id":"20250513192520-sc1at6h","updated":"20250513192520"},"Children":[{"Type":"NodeText","Data":"(2)增量方式包括"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"增量开发和增量提交"}]},{"ID":"20250513192520-wg3uoya","Type":"NodeParagraph","Properties":{"id":"20250513192520-wg3uoya","updated":"20250513192520"},"Children":[{"Type":"NodeText","Data":"(3)增量开发指在项目开发周期内，以一定的时间间隔开发部分工作软件"}]},{"ID":"20250513192520-ehe5qfc","Type":"NodeParagraph","Properties":{"id":"20250513192520-ehe5qfc","updated":"20250513192520"},"Children":[{"Type":"NodeText","Data":"(4)增量提交指在项目开发周期内，以一定的时间间隔向用户提交工作软件及相应文档。"}]},{"ID":"20250513192520-m9gdo62","Type":"NodeParagraph","Properties":{"id":"20250513192520-m9gdo62","updated":"20250513192520"},"Children":[{"Type":"NodeText","Data":"软件开发过程每迭代一次，软件开发又前进一个层次。"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"是螺旋模型的软件过程"}]}]}